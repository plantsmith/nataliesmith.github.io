{
  "hash": "9d0599919af6f30edf86b3fdf4b41e91",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Analyzing Socioeconomic and Environmental Factors in LA\"\ndescription: \"Examining correlations between socioeconomic status, environmental factors, and historical redlining grades in Los Angeles using Principal Components Analysis (PCA)\"\nauthor: \"Natalie Smith\"\ndate: 03-15-2024\ncategories: [Trends]\nformat:\n  html:\n    code-fold: true\nexecute:\n  echo: true\n  message: false\n  warning: false\ndraft: false # \"true\" will mean this is a draft post so it wont show up on my site\nfreeze: true\n---\n\n\n\n# Overview\n\nBetween 1935 and 1940, the HOLC created color-coded maps evaluating neighborhoods' mortgage security based on criteria such as housing quality, property values, and residents' racial and ethnic backgrounds. The maps categorized areas into four types: \"Type A\" (green) neighborhoods were the most desirable, \"Type B\" (blue) were still desirable, \"Type C\" (yellow) were declining, and \"Type D\" (red) were the riskiest, often older districts in city centers and predominantly Black.\n\nFor this assignment, we examined correlations between Census data, Tree Canopy Coverage, Heat Risk, and Redlining Grades in Los Angeles, CA. Utilizing the data that was previously wrangled for our \"[Mapping Heat Risk Inequality](https://plantsmith.shinyapps.io/heat_risk_inequality/)\" Shiny app (Natalie Smith and Olivia Hemond), we delved into these relationships for analysis.\n\n![Los Angeles, RDNE Photo Archive](la.jpg){width=\"1201\"}\n\n# Import Libraries:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(here)\nlibrary(ggfortify)\nlibrary(sf)\n```\n:::\n\n\n\n# Data Exploration and Wrangling:\n\nWhen bringing in the data, we'll first remove the spatial aspect and then select the variables designated for PCA analysis. Furthermore, we'll eliminate any missing values (NAs) to ensure data integrity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenviroscreen <- read_sf(here(\"portfolio\", \"pca\", \"data\",\"enviroscreen_final.gpkg\"))\n\n#pick data variables, drop spatial aspect, mutate to log\nclean_screen <- enviroscreen %>% \n    # mutate(diesel_pm = log(diesel_pm),\n    #      existing_canopy_pct = log(existing_canopy_pct)) %>% \n  st_drop_geometry() %>% \n  select(pm2_5,diesel_pm,lead,drink_wat,asthma,educatn, poverty,unempl,ling_isol,traffic, zip_pct_64, existing_canopy_pct, class1) %>% \n  drop_na()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#rename columns, education, and unemployment, etc. for clarity\nclean_screen <- clean_screen %>% \n  rename(education = educatn, \n         unemployment = unempl,\n         drinking_water = drink_wat, \n         heat_risk = zip_pct_64)\n```\n:::\n\n\n\n# Exploratory Plots:\n\nIn order to explore the data effectively, pivot so all the names of our variables are in one column. This will enable us to visualize the distribution of the variables and determine whether we need to apply any logarithmic transformations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#pivot\nscreen_long <- clean_screen %>%\n  pivot_longer(names_to = 'name', values_to = 'value', where(is.numeric))\n\n#plot\nggplot(screen_long , aes(x = value)) +\n  geom_histogram(fill= \"dodgerblue\") +\n  facet_wrap(~ name, scales = 'free_x')+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Exploratory histogram plot displaying the distribution of variables in the dataset. Each variable is represented by a separate plot, allowing for easy comparison of their frequency distributions.](index_files/figure-html/fig-exploratory-1.png){#fig-exploratory width=672}\n:::\n:::\n\n\n\nWhen looking at the exploratory plots, we observe a significant skew in diesel_pm and existing_canopy_coverage. We will utilize the mutate function to log transform them.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#log diesel and canopy coverage\nclean_screen_log <- clean_screen %>%\n    mutate(diesel_pm = log(diesel_pm),\n         existing_canopy_pct = log(existing_canopy_pct))\n```\n:::\n\n\n\n# Scaling:\n\nNext, we need to scale the data to ensure that each variable contributes equally to the analysis. This step allows us to investigate the loadings of the variables on the principal components obtained through PCA.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#scale\npca_screen<- clean_screen_log %>% \n  select(where(is.numeric)) %>%\n  prcomp(scale = TRUE)\n\n# pca_screen$rotation\n```\n:::\n\n\n\n# PCA plot:\n\nTo define the point as the redlining grades, we need to define the colors as a vector. Then we can utilize autoplot to create a visualization showing principal components over redlining zones. For a full description of the variables in the PCA analysis, refer to footnotes. [^1]\n\n[^1]: Full list of Principal Components Analysis (PCA) variables:\n\n    -   Asthma: Age-adjusted rate of emergency department visits for asthma\n    -   Diesel PM (diesel_pm): Emissions from on-road and non-road sources\n    -   Drinking Water: Drinking water contaminant index for selected contaminants\n    -   Education: Percent of population over 25 with less than a high school education\n    -   Existing Canopy Coverage (existing_canopy_pct): Percent of existing canopy coverage\n    -   Heat Risk: Daily excess number of emergency visits during an extreme heat day\n    -   Lead: Potential risk for lead exposure in children living in low-income communities with older housing\n    -   Linguistic Isolation (ling_isol): Percent limited English speaking households\n    -   PM 2.5 (pm2_5): Annual mean PM2.5 concentrations\n    -   Poverty: Percent of population living below two times the federal poverty level\n    -   Traffic: Traffic density in vehicle-kilometers per hour per road length, within 150 meters of the census tract boundary\n    -   Unemployment: Percent of the population over the age of 16 that is unemployed and eligible for the labor force\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#specify colors for the data points\nclass1_colors <- c(\"A\" = \"limegreen\", \"B\" = \"deepskyblue2\", \"C\" = \"orange\", \"D\" = \"firebrick1\")\n\n#autoplot\nautoplot(pca_screen,\n         data = clean_screen_log,\n         color = \"class1\",\n         loadings = TRUE,\n         loadings.label = TRUE,\n         loadings.colour = \"black\",\n         loadings.label.colour = \"black\",\n         loadings.label.vjust = -0.5) +\n  scale_color_manual(values = class1_colors, name = \"Redlining Grade\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Results of Principal Components Analysis (PCA) depicting correlations between variables.Canopy coverage negatively correlates with poverty and education. Traffic and diesel correlate but not with asthma, while PM 2.5 shows only a slight correlation with asthma. Additionally, redlining grades reveal associations: Type A & B neighborhoods have higher canopy coverage, while Type C & D neighborhoods exhibit higher poverty, unemployment, heat risk, and asthma rates in Los Angeles.](index_files/figure-html/fig-pca-1.png){#fig-pca width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# You can also create the plot with ggpolot, but I liked the autoplot version better. \n\n# #create loadings \n# loadings_df <- data.frame(pca_screen$rotation * 8) %>% ### 8x arrows\n#   mutate(axis = row.names(.))\n# \n# new_pts_df <- data.frame(pca_screen$x)\n# #how do we get these new point?\n# \n# ggplot() +\n#   geom_point(data = new_pts_df, aes(x = PC1, y = PC2), \n#              color = 'skyblue', \n#              alpha= 0.6) +\n#   geom_segment(data = loadings_df,\n#                x = 0, y = 0, aes(xend = PC1, yend = PC2, group = axis),\n#                arrow = arrow(length = unit(.25, 'cm'))) +\n#   geom_text(data = loadings_df,\n#             aes(x = PC1, y = PC2, label = axis), vjust = 0, nudge_y = .01) +\n#   theme_minimal()\n```\n:::\n\n\n\n# Screeplot\n\nTo create screeplots manually, we first calculate the variance and create a new dataframe containing our principal components, variance, and percentage variance. We can then graph using ggplot().\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create Screeplot using ggplot\n\n# Calculate variance\nsd_vec <- pca_screen$sdev\nvar_vec <- sd_vec^2 ### variance is square of standard deviation!\npc_names <- colnames(pca_screen$rotation) # column names to loadings \n\n# Create dataframe w PC, variance, and % var\npct_expl_df <- data.frame(pc = pc_names,\n                          v = var_vec,\n                          pct_v = var_vec / sum(var_vec)) %>%\n  mutate(pct_lbl = paste0(round(pct_v*100, 1), '%'))\n\n# Reorder levels of pc factor\npct_expl_df$pc <- factor(pct_expl_df$pc, levels = pc_names)\n\n# Column plot\nggplot(pct_expl_df, aes(x = pc, y = v)) +\n  geom_col(fill=\"dodgerblue\") +\n  geom_text(aes(label = pct_lbl), vjust = -0.5, nudge_y = 0.002) + \n  labs(x = 'Principal Component', y = 'Variance Explained') +\n  theme_minimal()\n\n# # If you want to do a line plot, instead of a column:\n\n# ggplot(pct_expl_df, aes(x = pc, y = v, group = 1)) +\n#   geom_line() +  # Line graph\n#   geom_point() + # points to show PC\n#   geom_text(aes(label = pct_lbl), vjust = -0.5, nudge_y = 0.002) + \n#   labs(x = 'Principal component', y = 'Variance explained') +\n#   theme_minimal()\n```\n\n::: {.cell-output-display}\n![Column screeplot illustrating Principal Components 1 through 12 (PC1 - PC12). PC1 accounts for 40.4% of the total variance, with PC2 representing 13.3%. Notably, the plot reveals a significant decrease in explained variance from PC1 to PC2, indicating that additional components may not significantly contribute to explaining the variance](index_files/figure-html/fig-screeplot-1.png){#fig-screeplot width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# You can also create screeplots with the function screeplot(), but I prefered the ggolot versions.\n# screeplot(pca_screen, type = \"lines\")\n# screeplot(pca_screen, type = \"barplot\")\n```\n:::\n\n\n\n# Summary:\n\nThe level of tree canopy cover within a census tract typically shows a negative correlation with poverty levels, pollution measurements, and health conditions. Areas in the 'A' grade, generally had higher canopy cover percentage. This suggests that wealthier communities with greater economic stability and reduced health risks, tend to have higher levels of canopy coverage.\n\nPoverty, low educational achievement, and unemployment are positively correlated. This may indicate the cyclical impact of poverty; as individuals in poverty find it more challenging to access education and secure well-paying employment, thus perpetuating the cycle.\n\nContrary to our assumptions, despite traffic and diesel showing correlation with each other, they do not show correlation with asthma. Similarly, PM 2.5, a pollutant commonly associated with respiratory issues, only demonstrates a slight correlation with asthma. This unexpected finding suggests the need for deeper exploration into the factors influencing asthma in the Los Angeles area.\n\nAdditionally, the data points associated with redlining grade, show us that Type A & B neighborhoods are more associated with canopy coverage and Type C & D neighborhoods are more associated with poverty, unemployment, heat risk, and asthma.\n\nWhen looking at the screeplot, we see a drastic fall from PC1 to PC2, indicating that adding additional components may not contribute significantly to explaining variance in the dataset.\n\n# References:\n\nEnvironmental Health Hazard Assessment, California Office of. 2024. “CalEnviroScreen 4.0.” <https://oehha.ca.gov/calenviroscreen/maps-data/download-data>.\n\nHealthy Climate Solutions & UCLA Center for Public Health, UCLA Center for, and Disasters. 2024. “UCLA Heat Maps.”<https://sites.google.com/g.ucla.edu/uclaheatmaps/map>.\n\nUniversity, Loyola Marymount. 2016. “Tree Canopy Coverage.” <https://la.myneighborhooddata.org/2021/10/tree-canopy-cover/>.\n\nUniversity of Richmond, Digital Scholarship Lab at the. 2023. “Home Owner Loan Corporation (HOLC) Neighborhood Grades for US Census.” Diversity Data Kids. <https://data.diversitydatakids.org/dataset/holc_census_tracts-home-owner-loan-corporation--holc--neighborhood-grades-for-us-census-tracts?_external=True>.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}